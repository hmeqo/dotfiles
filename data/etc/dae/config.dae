global {
  # Bind to LAN and/or WAN as you want. Replace the interface name to your own.
  lan_interface: enp3s0, wlp5s0, tailscale0, ztyqbz64jm
  wan_interface: auto # Use "auto" to auto detect WAN interface.

  log_level: info
  allow_insecure: false
  auto_config_kernel_parameter: true
}

# dns {
#   upstream {
#     alidns: 'udp://223.5.5.5:53'
#     googledns: 'tcp+udp://8.8.8.8:53'
#   }
#   routing {
#     request {
#       # Block AD
#       qname(geosite:category-ads) -> reject
#       qname(geosite:category-ads-all) -> reject
#
#       qname(geosite:cn) -> alidns
#       fallback: googledns
#     }
#   }
# }

# See https://github.com/daeuniverse/dae/blob/main/docs/en/configuration/dns.md for full examples.
dns {
  upstream {
    googledns: 'tcp+udp://8.8.8.8:53'
    alidns: 'udp://223.5.5.5:53'
  }
  routing {
    request {
      qtype(https) -> reject

      # Block AD
      qname(geosite:category-ads) -> reject
      qname(geosite:category-ads-all) -> reject

      fallback: alidns
    }
    response {
      upstream(googledns) -> accept
      ip(geoip:private) && !qname(geosite:cn) -> googledns
      fallback: accept
    }
  }
}

# See https://github.com/daeuniverse/dae/blob/main/docs/en/configuration/routing.md for full examples.
routing {
  pname(NetworkManager) -> direct
  dip(224.0.0.0/3, 'ff00::/8') -> direct

  ### Write your rules below.

  # 目标非常用端口都走直连，避免BT流量走代理
  !dport(21,22,23,53,80,123,143,194,443,465,587,853,993,995,998) -> direct

  # Disable h3 because it usually consumes too much cpu/mem resources.
  l4proto(udp) && dport(443) -> block
  dip(geoip:private) -> direct
  dip(geoip:cn) -> direct
  domain(geosite:cn) -> direct

  # Steam
  domain(geosite:steam@cn, domain:steamserver.net, domain:steamcontent.com) -> direct

  # Block AD
  domain(geosite:category-ads) -> block
  domain(geosite:category-ads-all) -> block
  domain(gstatic.com) -> proxy

  fallback: proxy
}

subscription {
  # Fill in your subscription links here.
  # MySubscription: 'https://xxx'
}

group {
  proxy {
    #filter: name(keyword: HK, keyword: SG)
    filter: subtag(MySubscription)
    # filter: name(keyword: HK)
    policy: min_moving_avg
    # policy: fixed(8)
  }
}
