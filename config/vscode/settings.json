{
    // ██╗   ██╗██╗███╗   ███╗
    // ██║   ██║██║████╗ ████║
    // ██║   ██║██║██╔████╔██║
    // ╚██╗ ██╔╝██║██║╚██╔╝██║
    //  ╚████╔╝ ██║██║ ╚═╝ ██║
    //   ╚═══╝  ╚═╝╚═╝     ╚═╝

    // "vim.timeout": 500,
    "vim.enableNeovim": true,
    // "vim.easymotion": true,
    "vim.useSystemClipboard": true,
    "vim.useCtrlKeys": true,
    "vim.leader": "<space>",
    "vim.hlsearch": true,
    "vim.foldfix": true,
    "vim.camelCaseMotion.enable": true,
    "vim.highlightedyank.enable": true,
    "vim.highlightedyank.color": "rgba(230, 97, 89, 0.7)",
    "vim.highlightedyank.textColor": "white",
    "vim.handleKeys": {
        "<C-a>": false,
        "<C-c>": false,
        "<C-v>": false,
        "<C-x>": false,
        "<C-z>": false,
        "<C-h>": false,
        "<C-l>": false,
        "<C-k>": false,
        "<C-f>": false,
        "<C-j>": false,
        "<C-b>": false,
        "<C-t>": false,
        "<C-p>": false,
        "<C-q>": false
    },
    "vim.normalModeKeyBindingsNonRecursive": [
        // Vscode to Vim
        {
            "before": ["<C-right>"],
            "after": ["e"]
        },
        // Vim basic
        {
            "before": ["u"],
            "commands": ["undo"]
        },
        {
            "before": ["<C-r>"],
            "commands": ["redo"]
        },
        {
            "before": ["z", "h"],
            "commands": ["scrollLeft"]
        },
        {
            "before": ["z", "l"],
            "commands": ["scrollRight"]
        },
        // AstroNvim basic
        {
            "before": ["<Leader>", "w"],
            "names": ["Go to Change...", "Next Change"],
            "commands": [":w"]
        },
        {
            "before": ["<Leader>", "W"],
            "commands": [":w!"]
        },
        {
            "before": ["<Leader>", "c"],
            "commands": [":q"]
        },
        {
            "before": ["<Leader>", "C"],
            "commands": ["workbench.action.closeActiveEditor"]
        },
        {
            "before": ["<Leader>", "q"],
            "commands": ["workbench.action.closeEditorsAndGroup"]
        },
        // Session
        {
            "before": ["<Leader>", "S", "f"],
            "commands": ["projectManager.listProjects"]
        },
        {
            "before": ["<Leader>", "S", "F"],
            "commands": ["workbench.action.openRecent"]
        },
        {
            "before": ["<Leader>", "S", "s"],
            "commands": ["projectManager.saveProject"]
        },
        // Buffer
        {
            "before": ["[", "b"],
            "commands": ["workbench.action.previousEditor"]
        },
        {
            "before": ["]", "b"],
            "commands": ["workbench.action.nextEditor"]
        },
        {
            "before": ["H"],
            "commands": ["workbench.action.previousEditor"]
        },
        {
            "before": ["L"],
            "commands": ["workbench.action.nextEditor"]
        },
        // Find
        {
            "before": ["<Leader>", "f", "C"],
            "commands": ["workbench.action.showCommands"]
        },
        {
            "before": ["<Leader>", "f", "f"],
            "commands": ["workbench.action.quickOpen"]
        },
        {
            "before": ["<Leader>", "f", "N"],
            "commands": ["notifications.showList"]
        },
        {
            "before": ["<Leader>", "f", "o"],
            "commands": ["workbench.action.openRecent"]
        },
        {
            "before": ["<Leader>", "f", "t"],
            "commands": ["workbench.action.selectTheme"]
        },
        {
            "before": ["<Leader>", "f", "w"],
            "commands": ["workbench.action.findInFiles"]
        },
        // git
        {
            "before": ["<Leader>", "g", "g"],
            "commands": ["workbench.view.scm"]
        },
        // lsp
        {
            "before": ["K"],
            "commands": ["editor.action.showHover"]
        },
        {
            "before": ["g", "I"],
            "commands": ["editor.action.goToImplementation"]
        },
        {
            "before": ["g", "d"],
            "commands": ["editor.action.revealDefinition"]
        },
        {
            "before": ["g", "D"],
            "commands": ["editor.action.revealDeclaration"]
        },
        {
            "before": ["g", "r"],
            "commands": ["editor.action.goToReferences"]
        },
        {
            "before": ["g", "y"],
            "commands": ["editor.action.goToTypeDefinition"]
        },
        {
            "before": ["<Leader>", "l", "a"],
            "commands": ["editor.action.quickFix"]
        },
        {
            "before": ["<Leader>", "l", "A"],
            "commands": ["editor.action.codeAction"]
        },
        {
            "before": ["<Leader>", "l", "G"],
            "commands": ["workbench.action.showAllSymbols"]
        },
        {
            "before": ["<Leader>", "l", "R"],
            "commands": ["editor.action.goToReferences"]
        },
        {
            "before": ["<Leader>", "l", "r"],
            "commands": ["editor.action.rename"]
        },
        {
            "before": ["<Leader>", "l", "s"],
            "commands": ["workbench.action.gotoSymbol"]
        },
        {
            "before": ["<Leader>", "l", "f"],
            "commands": ["editor.action.formatDocument"]
        },
        // flash.nvim
        {
            "before": ["s"],
            "after": ["<Leader>", "<Leader>", "s"]
        },
        // Camel case motion
        {
            "before": [",", "w"],
            "after": ["<Leader>", "w"]
        },
        {
            "before": [",", "e"],
            "after": ["<Leader>", "e"]
        },
        {
            "before": [",", "b"],
            "after": ["<Leader>", "b"]
        },
        // Split
        {
            "before": ["\\"],
            "after": ["<C-w>", "s"]
        },
        {
            "before": ["|"],
            "after": ["<C-w>", "v"]
        },
        // 取消高亮
        {
            "before": ["<C-n>"],
            "commands": [":nohl"]
        },
        // 注释
        {
            "before": ["<Leader>", "/"],
            "commands": ["editor.action.commentLine"]
        },
        // Open settings
        {
            "before": ["<Leader>", ".", "g"],
            "commands": ["workbench.action.openRawDefaultSettings"]
        },
        {
            "before": ["<Leader>", ".", "f"],
            "commands": ["workbench.action.openFolderSettingsFile"]
        },
        {
            "before": ["<Leader>", ".", "r"],
            "commands": ["workbench.action.openRemoteSettingsFile"]
        },
        {
            "before": ["<Leader>", ".", "u"],
            "commands": ["workbench.action.openSettingsJson"]
        },
        {
            "before": ["<Leader>", ".", "w"],
            "commands": ["workbench.action.openWorkspaceSettingsFile"]
        }
    ],
    "vim.insertModeKeyBindings": [
        // Motion
        {
            "before": ["<left>"],
            "commands": ["cursorLeft"]
        },
        {
            "before": ["<right>"],
            "commands": ["cursorRight"]
        },
        {
            "before": ["<Up>"],
            "commands": ["cursorUp"]
        },
        {
            "before": ["<Down>"],
            "commands": ["cursorDown"]
        },
        // 编辑
        {
            "before": ["j", "j"],
            "after": ["<Esc>"]
        },
        {
            "before": ["j", "k"],
            "after": ["<Esc>"]
        },
        {
            "before": ["<C-i>"],
            "commands": ["editor.action.triggerSuggest"]
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        // Motion
        {
            "before": ["<C-right>"],
            "after": ["e"]
        },
        {
            "before": ["s"],
            "after": ["<Leader>", "<Leader>", "s"]
        },
        // Camel case motion
        {
            "before": [",", "w"],
            "after": ["<Leader>", "w"]
        },
        {
            "before": [",", "e"],
            "after": ["<Leader>", "e"]
        },
        {
            "before": [",", "b"],
            "after": ["<Leader>", "b"]
        },
        // 注释
        {
            "before": ["<Leader>", "/"],
            "commands": ["editor.action.commentLine"]
        }
    ],

    //  ██████╗ ████████╗██╗  ██╗███████╗██████╗
    // ██╔═══██╗╚══██╔══╝██║  ██║██╔════╝██╔══██╗
    // ██║   ██║   ██║   ███████║█████╗  ██████╔╝
    // ██║   ██║   ██║   ██╔══██║██╔══╝  ██╔══██╗
    // ╚██████╔╝   ██║   ██║  ██║███████╗██║  ██║
    //  ╚═════╝    ╚═╝   ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝

    "settingsSync.ignoredExtensions": [
        "ms-vscode.vscode-speech",
        "ms-vscode.vscode-speech-language-pack-zh-cn",
        "ms-vscode.vscode-speech-language-pack-en-gb"
    ],
    "settingsSync.ignoredSettings": ["accessibility.voice.speechLanguage"],

    // "file://${userHome}/.config/dotfiles/config/vscode/ui.css",
    "vscode_custom_css.imports": [
        "file://${userHome}/.vscode/extensions/brandonkirbyson.vscode-animations-2.0.4/dist/updateHandler.js"
    ],
    "animations.CursorAnimation": true,
    "animations.Enabled": true,
    "animations.Smooth-Mode": false,
    "animations.Tabs": "Slide",
    "animations.Command-Palette": "Slide",
    "animations.Scrolling": "Fade",
    "animations.CursorAnimationOptions": {
        "Color": "#ffffff",
        "CursorStyle": "block",
        "TrailLength": 5
    },
    "window.titleBarStyle": "custom",
    "window.commandCenter": true,
    "window.customMenuBarAltFocus": false,
    "window.customTitleBarVisibility": "auto",
    "workbench.iconTheme": "symbols",
    "workbench.activityBar.location": "top",
    "workbench.list.smoothScrolling": true,
    "workbench.editor.splitInGroupLayout": "vertical",
    "workbench.editorAssociations": {
        "{hexdiff}:/**/*.*": "hexEditor.hexedit",
        "*.md": "default",
        "*.svg": "default",
        "{git,gitlens,git-graph}:/**/*.{md,csv,svg}": "default"
    },
    "editor.fontFamily": "Maple Mono SC NF",
    "editor.fontSize": 14,
    "editor.fontLigatures": true,
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.cursorBlinking": "solid",
    "editor.lineNumbers": "relative",
    "editor.smoothScrolling": true,
    "editor.rulers": [
        {
            "column": 120,
            "color": "#7F7F7F0f"
        }
    ],
    "editor.inlayHints.enabled": "offUnlessPressed",
    "editor.accessibilitySupport": "off",
    "editor.minimap.showSlider": "always",
    "explorer.openEditors.visible": 5,
    "terminal.integrated.customGlyphs": true,
    "terminal.integrated.fontFamily": "FiraCode Nerd Font",
    "terminal.integrated.profiles.windows": {
        "PowerShell UTF-8": {
            "path": "powershell.exe",
            "icon": "terminal-powershell",
            "args": [
                "-c",
                "chcp 65001 > $null;",
                "$shell = if (Get-Command pwsh -ErrorAction SilentlyContinue) { 'pwsh' } else { 'powershell' }",
                "& $shell -NoLogo"
            ]
        },
        "Command Prompt UTF-8": {
            "path": "cmd.exe",
            "icon": "terminal-cmd",
            "args": ["/K chcp 65001 > nul && cmd"]
        }
    },
    "terminal.integrated.defaultProfile.windows": "PowerShell UTF-8",
    "terminal.integrated.defaultProfile.linux": "fish",
    "terminal.integrated.env.windows": {},
    "terminal.integrated.env.linux": {},
    "terminal.integrated.hideOnStartup": "whenEmpty",
    "diffEditor.experimental.showMoves": true,
    "diffEditor.ignoreTrimWhitespace": false,
    "debug.showBreakpointsInOverviewRuler": true,
    "update.mode": "manual",
    "git.autofetch": true,
    "zenMode.hideLineNumbers": false,
    "files.autoGuessEncoding": true,
    "files.associations": {
        "*.bzl": "python",
        "*.json": "jsonc",
        "*.cjson": "jsonc",
        "*.wxss": "css",
        "*.wxs": "javascript"
    },
    "emmet.includeLanguages": {
        "jsp": "html",
        "wxml": "html"
    },
    "[vue]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[xml]": {
        "editor.defaultFormatter": "redhat.vscode-xml"
    },
    "[markdown]": {
        "editor.defaultFormatter": "yzhang.markdown-all-in-one",
        "editor.wordWrap": "off"
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[shellscript]": {
        "editor.defaultFormatter": "foxundermoon.shell-format"
    },
    "[yaml]": {
        "editor.defaultFormatter": "redhat.vscode-yaml"
    },
    "prettier.tabWidth": 4,
    "prettier.printWidth": 120,
    "clangd.arguments": [
        // 代码风格 microsoft, google
        "--fallback-style=microsoft",
        // 在后台自动分析文件（基于complie_commands)
        "--background-index",
        // 同时开启的任务数量
        "-j=12",
        // 更详细的补全内容
        "--completion-style=detailed",
        // clang-tidy功能
        // "--clang-tidy",
        // "--clang-tidy-checks=performance-*,bugprone-*",
        // 全局补全（会自动补充头文件）
        // "--all-scopes-completion",
        // 补充头文件的形式
        // "--header-insertion=iwyu",
        // pch优化的位置
        "--pch-storage=disk"
    ],
    "clangd.fallbackFlags": ["-Wno-deprecated-declarations"],
    "python.analysis.typeCheckingMode": "basic",
    "python.analysis.autoImportCompletions": false,
    "pyqt-integration.qtdesigner.path": "designer",
    "java.eclipse.downloadSources": true,
    "java.configuration.maven.userSettings": "~/.config/maven/settings.xml",
    "xml.format.grammarAwareFormatting": false,
    "xml.server.workDir": "~/.cache/lemminx",
    "typescript.preferences.useAliasesForRenames": false,
    "vue.server.hybridMode": false,
    "projectManager.sortList": "Name",
    "projectManager.tags": ["Workspace", "Projects", "Repos", "Personal"],
    "code-runner.runInTerminal": true,
    "code-runner.showRunIconInEditorTitleMenu": false,
    "code-runner.showRunCommandInEditorContextMenu": false,
    "code-runner.showRunCommandInExplorerContextMenu": false,
    "code-runner.fileDirectoryAsCwd": true,
    "codesnap.showWindowControls": false,
    // "codesnap.containerPadding": "0rem",
    // "codesnap.roundedCorners": false,
    "markdownlint.config": {
        "MD033": false,
        "MD041": false
    },
    "markdown-preview-enhanced.breakOnSingleNewLine": false,
    "markdown-preview-enhanced.previewTheme": "github-light.css",
    "markdown-preview-enhanced.enableExtendedTableSyntax": true,
    "livePreview.autoRefreshPreview": "On Changes to Saved Files",
    "errorLens.messageBackgroundMode": "none",
    "rsp-ui.enableStartServerOnActivation": [
        {
            "id": "redhat.vscode-community-server-connector",
            "name": "Community Server Connector",
            "startOnActivation": true
        }
    ],
    "codeium.enableConfig": {
        "*": true,
        "java-properties": true,
        "xml": true,
        "jsp": true,
        "snippets": true,
        "po": true,
        "Textual CSS": true,
        "markdown": true,
        "fish": true,
        "wxml": true,
        "nginx": true
    },
    "codeium.enableCodeLens": false,
    "symbols.hidesExplorerArrows": false,
    "indentRainbow.ignoreErrorLanguages": ["*"],
    "indentRainbow.indicatorStyle": "light",
    "indentRainbow.colors": ["rgba(255,255,64,0.08)", "rgba(255,127,255,0.08)", "rgba(0,127,255,0.08)"],
    "sortJSON.contextMenu": false,
    "cSpell.allowCompoundWords": true,
    "cSpell.showStatus": false,
    "cSpell.showSuggestionsLinkInEditorContextMenu": false,
    "cSpell.showCommandsInEditorContextMenu": false,
    "cSpell.textDecorationColor": "#888",
    "cSpell.textDecorationStyle": "dashed",
    "cSpell.userWords": [
        "alova",
        "clangd",
        "csrftoken",
        "datas",
        "httpx",
        "isort",
        "mybatis",
        "Nuxt",
        "pypackages",
        "rgba",
        "sneakyorm",
        "wxpusher",
        "yapf"
    ],
    "sqltools.useNodeRuntime": true,
    "license.author": "Hmeqo",
    "accessibility.voice.speechLanguage": "en-GB",
    "vscode-office.editorTheme": "Auto",
    "GitCommitPlugin.ShowEmoji": false,
    "minapp-vscode.disableAutoConfig": true,
    "console-ninja.featureSet": "Community",
    "tailwindMagic.attributifyMode": false
}
